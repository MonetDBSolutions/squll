# (c) 2018- MonetDB Solutions
# author: Martin Kersten
# A sample SQALPEL configuration file
# This file should live within the directory from which you start the program.

[DEFAULT]
# The default section contains the properties shared for all target systems.

# The main property is the IP adress to reach a Sqalpel web server
server = localhost:5000
# server = http://scalpel-14242567.eu-west-1.elb.amazonaws.com/

# The prime purpose of sqlprobe is to run database experiments on behalf of registered SQALPEL users.
# It can retrieve tasks by providing a project specific key.
# The global key is used for debugging.
key =aBcDeFgH

# Sqalpel differentiates the hosts on which experiments are ran with a nickname.
# This way one can conceal the actual host name, releasing only basic host properties.
host=Mac

# the default target can be set as a global property to enable command line steering
target = BabyBench

# Long running experiments can be costly, espcially in a Cloud setting.
# Therefore, when the DBMS has an option to timeout a query, it can use this
# global time out property (in seconds)
timeout = 60

# For debugging purposes of sqalpel.py one can turn on this flag
debug = true

# The program stops when it runs out of work. This can be avoided using the property 'forever'
forever= true

# After too many database errors bail out to assess the experimental setup.
# A value 0 means never to bail out, otherwise it is the number of errors allowed
bailout = 0

# All experiments are ran a number of times, because the first
# run typically warms up the database engine.
#
repeat = 5

# TASK SPECIFICATION
# The sections are specific to the target project, dbms, and experiments.
# Upon need additional key=value pairs can be given to instruct the corresponding driver
# The 'db' is a list of database contacted in a round-robing fashion
# Arbitrary project/experiments can be indicated with the wildcard '*'
# The database location 'dbfarm' can be used in most circumtances as alternative to the 'db'
# IMPORTANT - For JDBC connections, the JAVA_HOME environmental variable should be set!

[BabyBench]
project = BabyBench
experiment = *
db = sf1,sf10
dbms = MonetDB
version= Mar18
dbfarm = %{home}s/dbfarm

[SQLite]
db = sf1
dbms = SQLite
version =3.19.3
project = TPC_H
branch = *
experiment = q06,q01
dbfarm = %(home)s/sqlite/

[PostgreSQL]
db = sf1,sf10
dbms = PostgreSQL
version= 11beta1
dbfarm = %(home)s/data
project = TPC_H
experiment = q06,q01

[MariaDB]
db = sf1,sf10
dbms = MariaDB
version=10.3.8
project = TPC_H
experiment = q06,q01
dbfarm =%(home)s/dbfarm-mariadb
dbsocket=%(home)s/.mariadb.socket
command=mysql --socket={socket} --database={database} -u root
port=51337
bailout = 3

[Actian]
db = sf1,sf10
dbms = Actian
version= VW 5.1.0
dbfarm = # Ingres specific properties
project = TPC_H
experiment = q06,q01
command=sql {database}

[Firebird]
db = sf1,sf10
dbms = Firebird
version =  3.0.3
dbfarm = #%(home)s/firebird/database.db
project = TPC_H
experiment = q06,q01

[Apache Derby]
project = TPC_H
db = /path/to/sf1,/path/to/sf10
dbms = Apache Derby
experiment = q06,q01
version = 10.14.2.0
uri = jdbc:derby:{database};create=true;
jars = </path/to/>derby.jar

[Apache Hive]
project = TPC_H
db = sf1,sf10
dbms = Apache Hive
experiment = q06,q01
version = 3.1.0
uri = jdbc:hive://localhost:10000/{database}
jars = </path/to>/hive.jar

[H2]
project = TPC_H
db = </path/to/sf1>/path/to/sf10
dbms = H2
experiment = q06,q01
version = 1.4.197
user = sa
uri = jdbc:h2:{database}
jars = /path/to/h2.jar

[HSQLDB]
project = TPC_H
db = </path/to/sf1>/path/to/sf10
dbms = HSQLDB
experiment = q06,q01
version = 2.4.1
uri = jdbc:hsqldb:file:{database}
jars = /path/to/hsqldb.jar

[MonetDBLite-Java]
project = TPC_H
db = </path/to/sf1>/path/to/sf10
dbms = MonetDBLite-Java
experiment = q06,q01
version = 2.38-SNAPSHOT
uri = jdbc:monetdb:embedded:{database}
jars = /path/to/monetdb-jdbc-new.jar,/path/to/monetdb-java-lite.jar
