# A sample sqlprobe configuration file
# This file should live within the directory from which you start the program.
# Alternatively, passed as a command line argument to sqlprobe.py

[DEFAULT]
# The default section contains the properties shared among all target systems.
# The main property is the IP adress to reach a SQLscalpel service
# server = localhost:5000
server = localhost:5000

# The prime purpose of sqlprobe is to run databas experiments on
# behalf of registered sqlscalpel users or their team members.
# The registered user will block all experimental results that are
# likely not genuine, e.g. faked user, duplicate results, or timeout at the server.
user = mk

# sqlscalpel differentiates the hosts on which experiments are ran with a nickname
# this way one can conceal the actual host name.
host = localhost

# Long running experiments can be costly, espcially in a Cloud setting.
# Therefore, when the DBMS has an option to timeout a query, it can use this
# global time out property (in seconds)
timeout = 60

# For debugging purposes one can turn on this flag
debug = false

# Optionally requests multiple task at once
batch = 1

# All experiments are ran a number of times.
# The first run is considered a cold run
# The best of all is reported on the website
repeat = 5

# The sections may be specific to the target DBMS

[MonetDB]
# multiple database instances can be exercised in a round robin fashion
db = sf1,sf10
dbms = MonetDB

# using the name 'all' is interpreted as arbitrary project/experiment
project = TPC-H
experiment = q06,q01

# The location of the database for this product
dbfarm = /export/scratch1/home/mk/dbfarm


[SQLite]
db = sf1
dbms = SQLite
project = TPC-H
experiment = q06,q01
# dbfarm = /export/scratch1/home/mk/sqlite/
dbfarm = /Users/mlkersten/sqlite/

[PostgreSQL]
db = sf1,sf10
dbms = PostgreSQL
dbfarm = /export/scratch1/home/mk/data
project = TPC-H
experiment = q06,q01

